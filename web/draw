<!DOCTYPE html>
<html>
<head>
<!-- Load the Paper.js library -->
<script src="js/three.js"></script>

<script type="text/javascript" src="js/paper-full.js"></script>
<script type="text/javascript" src="js/zingtouch-min.js"></script>
<script src="js/controls/OrbitControls.js"></script>
<script src="js/controls/DragControls.js"></script>
<script src="js/controls/TrackballControls.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.4.0/annyang.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/1.0.0/speechkitt.min.js"></script>
<!-- Define inlined JavaScript -->
<style>
canvas {
    position: absolute;
    height: 100vh;
    top: 0;
    left: 0;
}
</style>
</head>
<body>
	<canvas id="info" style="width 100%;height:100vh;"></canvas>
	<canvas id="paperCanvas" style="position: relative; width:100%; height:97vh;" resize></canvas>

</body>
<footer>
	<script src="js/george.js"></script>

	<script type="text/javascript">

	if (annyang) {
	  // Add our commands to annyang
	  annyang.addCommands({
	    'hello': function() { alert('Hello world!'); }
	  });

	  // Tell KITT to use annyang
	  SpeechKITT.annyang();

	  // Define a stylesheet for KITT to use
	  SpeechKITT.setStylesheet('//cdnjs.cloudflare.com/ajax/libs/SpeechKITT/1.0.0/themes/flat.css');

	  // Render KITT's interface
	  SpeechKITT.vroom();
	}

canvas = document.getElementById("paperCanvas");
canvas.style.height = window.innerheight;
paper.install(window);

//toggle pen
	//space
	//TODO:double tap

//change color
	//TODO:tap and hold
	//TODO:XY axis color picker

//change opacity & width
	//TODO:double tap and hold
	//TODO:XY opacity and width picker

//toggle typing mode with (alt)

//clear project (del)
//change colors rgb with keys (r,g,b)
//change pen size with keys (1,2,3)
//change pen opacity with keys (7,8,9)

//add text to annotation

//annotations per page

//shared annotations

//interactive annotations

var pen = false;

var symbols = [];
var activeSymbol = -1;

window.onload = function() {
	var penColor = 'black';
	var penWidth = 1;
	var penOpacity = 0.5;
	paper.setup('paperCanvas');
	var penTool = new Tool();
	var path;
	var typing = false;
	var buffer = 'tjena\nalt toggles typing\nspace toggles pen\n1,2,3 sizes pen\n7,8,9 changes opacity\nr,g,b changes color\nclick to select\ntab defines symbol\ndelete clears everything';
	var text = new PointText(new Point(20,20));
	text.fillColor = 'black';
	text.content = buffer;

	setPenColor = function(c) {
		penColor=c;
	}
	setPenWidth = function(w) {
		penWidth=w;
	}
	setPenOpacity = function(o) {
		penOpacity = o;
	}

	drawSymbols = function() {
		for(i=0; i<symbols.length; i++) {
			var instance = symbols[i].place(view.center);
		}
	}

	penTool.minDistance = 10;

	penTool.onMouseDown = function(event) {
		if(pen) {
			path = new Path();
			path.strokeColor = penColor;
			path.fillColor = penColor;
			//path.fillColor = {hue:Math.random()*360,opacity:0.5,saturation:1,brightness:1};
			//path.strokeWidth = penWidth;
			path.strokeColor.alpha = penOpacity;
			path.fillColor.alpha = penOpacity;
			path.onClick = function(event) {
				this.fullySelected = !this.fullySelected;
			}
			path.add(event.point);
		}
	}
	penTool.onMouseDrag = function(event) {
		if(pen) {
			var step = event.delta.multiply(penWidth/4);
			//console.log(event.delta);
			step.angle += 90;
			//console.log(step.angle);
			var cap = event.point.add(step);
			console.log(cap);
			var bottom = event.point.subtract(step);
			//console.log(event.middlePoint+-step);
			path.add(cap);
			//console.log(cap);
			path.insert(0, bottom);
			path.smooth({type: 'catmull-rom', factor:0});

			//path.add(event.point);
			//console.log(path);
			//path.strokeWidth = event.delta.length/2;
			}
		}
	penTool.onMouseUp = function(event) {
			if(pen) {
				path.add(event.point);
				path.closed = true;
				path.smooth({type: 'catmull-rom', factor: 0});
				console.log(path);
				//path.fullySelected = true;
			}
		}
	penTool.onKeyDown = function(event) {
		if(typing) {
			if(event.key == 'alt') {
				console.log('alt');
				typing = !typing;
			} else if(event.key == 'backspace') {
				text.content = text.content.substring(0,text.content.length - 1);
			}
			else {
				text.content += event.character;
				console.log(text.content);
			}
		}

		else {
			if(event.key == 'alt') {
				console.log('alt');
				typing = !typing;
			}
			else if(event.key == 'space') {
				pen = !pen;
			}
			else if(event.key == 'escape') {
				project.deselectAll();
			}
			else if(event.key == 'tab') {
				symbols.push(new SymbolDefinition(new Group(project.selectedItems)));
				drawSymbols();
			}
			else if(event.key == 'r'){
				setPenColor('#ff0000');
			}
			else if(event.key == 'g') {
				setPenColor('#00ff00');
			}
			else if(event.key == 'b') {
				setPenColor('#0000ff');
			}
			else if(event.key == '1') {
				setPenWidth(1);
			}
			else if(event.key == '2') {
				setPenWidth(3);
			}
			else if(event.key == '3') {
				setPenWidth(7);
			}
			else if(event.key == '7') {
				setPenOpacity(0.1);
			}
			else if(event.key == '8') {
				setPenOpacity(0.4);
			}
			else if(event.key == '9') {
				setPenOpacity(1);
			}
			else if(event.key == 'delete'){
				paper.project.clear();
			}
		}
	}
}
	</script>

</footer>
</html>
